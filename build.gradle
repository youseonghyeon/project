// query dsl 버전 설정
buildscript {
  ext {
    queryDslVersion = "5.0.0"
  }
}
// ---

plugins {
  id 'org.springframework.boot' version '2.6.3'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'org.siouan.frontend-jdk11' version '5.2.0'
  id "org.siouan.frontend" version "3.0.2"
  //querydsl 추가
  id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
  id 'java'
}

group = 'com.project1'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-mail'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.modelmapper:modelmapper:2.4.5'
  implementation 'org.springframework.boot:spring-boot-configuration-processor'


  //querydsl 추가
  implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
  implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

  compileOnly 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'mysql:mysql-connector-java'
  runtimeOnly 'org.postgresql:postgresql'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'

  testImplementation 'com.tngtech.archunit:archunit-junit5:0.13.1'

  testImplementation 'org.testcontainers:junit-jupiter:1.13.0'
  testImplementation 'org.testcontainers:postgresql:1.13.0'
}

frontend {
  nodeDistributionProvided = false
  nodeInstallDirectory = file("${projectDir}/src/main/resources/static/node")
  packageJsonDirectory = file("${projectDir}/src/main/resources/static")
  nodeVersion = '16.0.0'
  assembleScript = 'run build'
  cleanScript = 'run clean'
  checkScript = 'run check'

}

tasks.named('test') {
  useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
  jpa = true
  querydslSourcesDir = querydslDir
}
sourceSets {
  main.java.srcDir querydslDir
}
compileQuerydsl{
  options.annotationProcessorPath = configurations.querydsl
}
configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
  querydsl.extendsFrom compileClasspath
}
//querydsl 추가 끝
